[[ -e ~/.bash_aliases_secret ]] && . ~/.bash_aliases_secret

# Wayfair aliases
alias wf_log_turbine='ssh -t admindev "turbine tail COMPILER,ERRORS"'

# Warner Bros Games aliases
alias flake8diff='git diff master | flake8 --diff'

alias psg='ps ax | ag '
alias ndone='notify-send -t 3 "CMD finished!" "in folder $(basename $PWD) with code $?"'
alias v='nvim'
alias pstop='watch -n1 "ps aux --sort=-pcpu | head -n 6"'
alias lstat='stat -c "%a %n" '
alias dusort='sudo du -h --max-depth=1 | sort -h -r'
alias dusort='find . -maxdepth 1 -mindepth 1 -exec du -hs {} \; | sort -h -r'
alias t='i3-sensible-terminal &'
alias susp='sudo pm-suspend'
alias rebo='sudo reboot'
alias o='xdg-open'
alias pdfl='pdflatex'
alias ls='ls -G'
alias l='gls -Flh --group-directories-first --color'
alias la='gls -aFlh --group-directories-first --color'
alias apt-get='$HOME/bin/apt-log.sh'
alias tar-preview='tar -tf'
alias pydemon='nodemon --ext py --exec python'
alias pymon='nodemon --ext py --exec python'
md-to-pdf() {
  pandoc $1 -o ${1}.pdf --variable=geometry:"margin=1cm"
}

function e() {
  local archive="$@"
  local extraction_folder="${archive%.*}"
  local mimetype=$(file --mime-type --brief $archive)

  case $mimetype in
    application/x-bzip2|application/x-7z-compressed)
      7z x "$archive" -o"$extraction_folder/"
      ;;
    application/x-rar)
      unrar x "$archive" "$extraction_folder/"
      ;;
    application/zip)
      unzip "$archive" -d "$extraction_folder/"
      ;;
    application/gzip)
      mkdir -p "$extraction_folder"
      tar xzvf "$archive" -C "$extraction_folder/"
      ;;
    *)
      echo unknown mime type $mimetype
      return 1
      ;;
  esac
}


alias pacman='pacman_wrapper'
function pacman_wrapper() {
  for arg in $@
  do
    [[ $arg =~ -*s* ]] && purpose_is_search=true
    [[ $arg =~ ^[^-] ]] && search_string=$arg
  done

  if [[ $purpose_is_search = true ]]
  then
    command pacman $@ \
      | GREP_COLOR='01;33' grep -Ei --color=always "^|$search_string" \
      | GREP_COLOR='01;31' grep -E --color=always '^|\[installed\]'
  else
    command pacman $@ 
  fi
}

# docker aliases
alias docker-stop='docker stop $(docker ps -q)'
alias docker-rmi='docker rmi $(docker images -a -q)'
function docker-rm() {
  docker rm $(docker ps -a 2&>1 | awk 'NR>1' | grep "$1" | awk '{print $1}')
}

# docker steam
function docker_helper() {
    pushd ~/docker/$1
    docker-compose rm -fa "$1"
    docker-compose run -d --name "$1" "$@"
    popd
}

function steam() {
    docker_helper "$FUNCNAME" "$@"
}

#git aliases
git() {
  REGEX=" -[a-z]*f[a-z]*|--force$|--force[^-]"
  if [[ $@ =~ $REGEX ]];then
    echo Hey stupid, use --force-with-lease instead
    return 1
  else
    command git "$@"
  fi
}
alias gaA='git add -A'
alias ga='git add --all .'
alias gc='git commit -m $1'
alias gstat='git status'
alias gd='git diff $@ --name-only'
alias gb='git branch'
alias gsp='git stash push -u -m $1'
function gdf() {
  current_branch=$(git rev-parse --abbrev-ref HEAD)
  git diff --name-only $current_branch $(git merge-base $current_branch master)
}

# ruby bundler aliases
bjs() {
  bundle exec jekyll serve --watch
}
bgu() {
  bundle exec guard
}


title(){
  echo -ne "\033]0;$1\007"
}
function sorthuman(){
  sudo du -mh "$1" | sort -hr | head -n 20
}
function notify() {
  while true
  do
    inotifywait -qre close_write .
  done
}

function npm_install_local_package() {
  local cwd="$PWD" \
    && local package_folder=$1 \
    && echo "package_folder $package_folder" \
    && cd $1 \
    && local tarball=$(npm pack) \
    && echo "tarball $tarball" \
    && local fullpath="$package_folder/$tarball" \
    && cd "$cwd" \
    && npm install "$fullpath"
}


function _build:cpp:cmake() {
  cmake \
    -DCMAKE_C_COMPILER=/usr/bin/gcc \
    -DCMAKE_CXX_COMPILER=/usr/bin/g++ \
    -DFRAMEWORK_TRANSPORT_CURL:BOOL=ON \
    -DFRAMEWORK_STD_LIB:STRING=FRAMEWORK_STD \
    -DFRAMEWORK_STD_FUNCTION_IGNORE_ALLOCATOR:BOOL=ON \
    -DHYDRA_ENABLE_TESTS:BOOL=ON \
    -DCMAKE_CXX_FLAGS:STRING=-std=c++11 \
    -DFRAMEWORK_COMPRESSION_ZLIB:BOOL=ON \
    -DZLIB_INCLUDE_DIR:STRING=/usr/include \
    -DZLIB_LIBRARY:STRING=/usr/lib/libz.dylib \
    -DHYDRA_WITH_SERVER:BOOL=ON \
    -DFRAMEWORK_STRING:STRING="FRAMEWORK_STD" \
    -DFRAMEWORK_ALGORITHM:STRING="FRAMEWORK_STD" \
    -DFRAMEWORK_CONTAINERS:STRING="FRAMEWORK_STD" \
    -S . -B ./build/cmake

}

function build:cpp:watch() {
  _build:cpp:cmake

  nodemon \
    --ext h,cpp \
    --watch ./src \
    --watch ./example \
    --exec "make -j6 -C build/cmake"
}

function build:cpp:watch() {
  _build:cpp:cmake

  make -j6 -C build/cmake
}

function studio:lint:watch() {
  local $target=${1-master}
  nodemon --ext py --exec "clear; git diff --name-only $target | ag '.py$' | xargs flake8"
}
